Overall issues
==============

 * Documentation

 * Make y axis point in the correct direction in the images

libll
=====

 * Rewrite ll_source_images() as a general strong lensing tool,
   improving performace by introducing a two-level hierarchy.  The
   source would be provided as an image rather than as position and
   radius.  Integer conversion will be neccessary which can be avoided
   in the current version.  Performance?

 * Introduce consistent variable naming indicating whether lens plane,
   source plane or magnification pattern coordinates are used

 * Add function ll_render_magpattern_palette()

 * Triangulated ray shooting needs optimisation (this a tough one).

luckylensing.py
===============

 * Currently, the Python application still needs to know some details
   about the C layer.  For example, when changing the type of the
   counts in a magpattern from int to float, I needed to touch
   magpattern.py.  Maybe it is possible to improve encapsulation.

User interface
==============

 * Introduce more sophisticated "data flow" layer

    * Add "zoom history"

    * Add save and load (including FITS output)

 * Introduce support for multiple UI tools

 * Make source image viewer a separate UI tool

 * Add some kind of statistics output (xrays, yrays, levels, time)

 * Make +/- buttons for lens list work

Obsolete TODO entries
=====================

 * A  case where the heuristics without overshoot fail:

       xpixels = ypixels = 1024
       density = 100
       region.x =  0.35231628417968747
       region.y = -0.026422119140624992
       region.width = region.height = 0.027683258056640625
       "standard" lens configuration
